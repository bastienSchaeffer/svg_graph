// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App render should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <header
        className="app-header"
      >
        <img
          alt="Bastien Schaeffer"
          src="logo.svg"
        />
        <h1
          className="app-title"
        >
          Webpack React boilerplate
        </h1>
        <p>
          The color of this page is: white
        </p>
        <p>
          Flow: https://medium.com/@joshuacrass/type-checking-with-flow-react-babel-and-webpack-290cbf4cd4b3
        </p>
        <p>
          docker build -t build-monitor docker/ docker run -p 5000:5000 build-monitor docker run -it build-monitor sh
        </p>
        <Button>
          Button label
        </Button>
      </header>,
      "className": "app",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <img
            alt="Bastien Schaeffer"
            src="logo.svg"
          />,
          <h1
            className="app-title"
          >
            Webpack React boilerplate
          </h1>,
          <p>
            The color of this page is: white
          </p>,
          <p>
            Flow: https://medium.com/@joshuacrass/type-checking-with-flow-react-babel-and-webpack-290cbf4cd4b3
          </p>,
          <p>
            docker build -t build-monitor docker/ docker run -p 5000:5000 build-monitor docker run -it build-monitor sh
          </p>,
          <Button>
            Button label
          </Button>,
        ],
        "className": "app-header",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "Bastien Schaeffer",
            "src": "logo.svg",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Webpack React boilerplate",
            "className": "app-title",
          },
          "ref": null,
          "rendered": "Webpack React boilerplate",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "The color of this page is: white",
          },
          "ref": null,
          "rendered": "The color of this page is: white",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Flow: https://medium.com/@joshuacrass/type-checking-with-flow-react-babel-and-webpack-290cbf4cd4b3",
          },
          "ref": null,
          "rendered": "Flow: https://medium.com/@joshuacrass/type-checking-with-flow-react-babel-and-webpack-290cbf4cd4b3",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "docker build -t build-monitor docker/ docker run -p 5000:5000 build-monitor docker run -it build-monitor sh",
          },
          "ref": null,
          "rendered": "docker build -t build-monitor docker/ docker run -p 5000:5000 build-monitor docker run -it build-monitor sh",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Button label",
          },
          "ref": null,
          "rendered": "Button label",
          "type": [Function],
        },
      ],
      "type": "header",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <header
          className="app-header"
        >
          <img
            alt="Bastien Schaeffer"
            src="logo.svg"
          />
          <h1
            className="app-title"
          >
            Webpack React boilerplate
          </h1>
          <p>
            The color of this page is: white
          </p>
          <p>
            Flow: https://medium.com/@joshuacrass/type-checking-with-flow-react-babel-and-webpack-290cbf4cd4b3
          </p>
          <p>
            docker build -t build-monitor docker/ docker run -p 5000:5000 build-monitor docker run -it build-monitor sh
          </p>
          <Button>
            Button label
          </Button>
        </header>,
        "className": "app",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt="Bastien Schaeffer"
              src="logo.svg"
            />,
            <h1
              className="app-title"
            >
              Webpack React boilerplate
            </h1>,
            <p>
              The color of this page is: white
            </p>,
            <p>
              Flow: https://medium.com/@joshuacrass/type-checking-with-flow-react-babel-and-webpack-290cbf4cd4b3
            </p>,
            <p>
              docker build -t build-monitor docker/ docker run -p 5000:5000 build-monitor docker run -it build-monitor sh
            </p>,
            <Button>
              Button label
            </Button>,
          ],
          "className": "app-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "Bastien Schaeffer",
              "src": "logo.svg",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Webpack React boilerplate",
              "className": "app-title",
            },
            "ref": null,
            "rendered": "Webpack React boilerplate",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "The color of this page is: white",
            },
            "ref": null,
            "rendered": "The color of this page is: white",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Flow: https://medium.com/@joshuacrass/type-checking-with-flow-react-babel-and-webpack-290cbf4cd4b3",
            },
            "ref": null,
            "rendered": "Flow: https://medium.com/@joshuacrass/type-checking-with-flow-react-babel-and-webpack-290cbf4cd4b3",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "docker build -t build-monitor docker/ docker run -p 5000:5000 build-monitor docker run -it build-monitor sh",
            },
            "ref": null,
            "rendered": "docker build -t build-monitor docker/ docker run -p 5000:5000 build-monitor docker run -it build-monitor sh",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Button label",
            },
            "ref": null,
            "rendered": "Button label",
            "type": [Function],
          },
        ],
        "type": "header",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
