// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button: Render should render with minimum config 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Button
    onClick={[MockFunction]}
    size="sm"
  >
    Button
  </Button>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": "Button",
      "className": undefined,
      "data-test-id": undefined,
      "disabled": false,
      "fullWidth": undefined,
      "loading": false,
      "onClick": [MockFunction],
      "palette": "primary",
      "size": "sm",
      "type": "button",
    },
    "ref": null,
    "rendered": "Button",
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "rules": Array [
          "
  appearance: none;
  outline: 0;
  display: inline-block;
  background-clip: padding-box;
  transition: box-shadow 0.3s ease-out, background-color 0.3s ease-out;
  cursor: pointer;
  margin: 0;
  ",
          [Function],
          ";
  ",
          [Function],
          ";
  ",
          [Function],
          ";

  &:disabled {
    cursor: default;
    box-shadow: none;
    background-color: red;
    color: green;
    border-color: purple;
  }

  &:hover {
    ",
          "box-shadow: 0 1px 3px rgba(0,0,0,.12), 0 1px 2px rgba(0,0,0,.24)",
          "
  }
",
        ],
      },
      "defaultProps": Object {
        "disabled": false,
        "size": "lg",
      },
      "displayName": "styled.button",
      "foldedComponentIds": Array [],
      "propTypes": Object {
        "disabled": [Function],
        "palette": [Function],
        "size": [Function],
      },
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "button",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": "Button",
        "className": undefined,
        "data-test-id": undefined,
        "disabled": false,
        "fullWidth": undefined,
        "loading": false,
        "onClick": [MockFunction],
        "palette": "primary",
        "size": "sm",
        "type": "button",
      },
      "ref": null,
      "rendered": "Button",
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": false,
          "rules": Array [
            "
  appearance: none;
  outline: 0;
  display: inline-block;
  background-clip: padding-box;
  transition: box-shadow 0.3s ease-out, background-color 0.3s ease-out;
  cursor: pointer;
  margin: 0;
  ",
            [Function],
            ";
  ",
            [Function],
            ";
  ",
            [Function],
            ";

  &:disabled {
    cursor: default;
    box-shadow: none;
    background-color: red;
    color: green;
    border-color: purple;
  }

  &:hover {
    ",
            "box-shadow: 0 1px 3px rgba(0,0,0,.12), 0 1px 2px rgba(0,0,0,.24)",
            "
  }
",
          ],
        },
        "defaultProps": Object {
          "disabled": false,
          "size": "lg",
        },
        "displayName": "styled.button",
        "foldedComponentIds": Array [],
        "propTypes": Object {
          "disabled": [Function],
          "palette": [Function],
          "size": [Function],
        },
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "button",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
